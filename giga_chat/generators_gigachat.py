"""–ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å —á–∞—Ç–æ–º —á–µ—Ä–µ–∑ gigachain"""
import logging

from langchain_community.chat_models.gigachat import GigaChat
from langchain.chains import ConversationChain
from langchain.memory import ConversationBufferMemory
from langchain_core.messages import HumanMessage, SystemMessage

from config import settings

logger = logging.getLogger(__name__)

async def get_connection():
    llm = GigaChat(credentials=settings.GIGACHAT_AUTHORIZATION,
                    verify_ssl_certs=False)
    chat = ConversationChain(
        llm=llm,
        memory=ConversationBufferMemory(),
    )

    return chat


async def get_gigachat_text(bot_message: str) -> str:
    messages = [
        SystemMessage(
            content="–¢—ã –æ–ø—ã—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥ —Ä–∞–∑–±–∏—Ä–∞–µ—à—å—Å—è –≤–æ –º–Ω–æ–∂–µ—Å—Ç–≤–µ"
                    "–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ç–∞–∫–∏—Ö –∫–∞–∫: —è–Ω–¥–µ–∫—Å –¥–∏—Ä–µ–∫—Ç, —è–Ω–¥–µ–∫—Å –º–µ—Ç—Ä–∏–∫–∞,"
                    "VK target, MyTarget. –ú–æ–∂–µ—à—å –≥—Ä–∞–º–æ—Ç–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–¥–∞—é—â–∏–µ —Ç–µ–∫—Å—Ç—ã –¥–ª—è "
                    "–æ–±—ä—è–≤–ª–µ–Ω–∏–π. –°–ø–æ—Å–æ–±–µ–Ω –Ω–∞–ø–∏—Å–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ SEO —Ç–µ–∫—Å—Ç—ã. "
                    "–¢–≤–æ—è –∑–∞–¥–∞—á–∞ –ø–æ–º–æ–≥–∞—Ç—å –¥—Ä—É–≥–∏–º –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–∞–º —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π "
                    "–∞–Ω–∞–ª–∏–∑–æ–º —Ä—ã–Ω–∫–∞, –Ω–∞–ø–∏—Å–∞–Ω–∏–µ–º —Ç–µ–∫—Å—Ç–æ–≤ –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –∏ —Å—Ç–∞—Ç–µ–π,"
                    " –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–¥–∫—Ä–µ–ø–ª—è—Ç—å —Å–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã "
                    "—Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –∏ –≤–∏–¥–µ–æ –ø–æ —Ç–µ–º–µ –≤–æ–ø—Ä–æ—Å–∞."
                    "–ù–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –¥–∞–≤–∞–π –ø–æ–ª–Ω—ã–µ, —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–µ –æ—Ç–≤–µ—Ç—ã."
        )
    ]
    chat = await get_connection()
    while True:
        if bot_message == "üí¨–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å":
            break
        messages.append(HumanMessage(content=bot_message))
        chat.invoke(messages)
        bot_answer = chat.memory.chat_memory.messages[-1].content
        return bot_answer
